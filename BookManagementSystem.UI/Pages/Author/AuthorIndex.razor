@using BookManagementSystem.UI.Models
@using BookManagementSystem.UI.Services.Base;
@using BookManagementSystem.UI.UnitOfWork;
@using BookManagementSystem.UI.Components;
@using BookManagementSystem.UI.Models.Author;

@page "/authors"
@inject IUnitOfWork unitOfWork;
@inject NavigationManager navigationManager;

<PageTitle>Authors</PageTitle>

@if (Authors == null)
{
    <p>Loading...</p>
}
else
{
    <h1>Authors</h1>
    <hr />
    <SearchBar Event="ToggleNavMenu" />

    <div class="@NavMenuCssClass">
        <EditForm Model="@Author" OnSubmit="() => RefreshData(Author.Page)">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div>
                <label for="name">Author name</label>
                <InputText id="name" @bind-Value="@Author.AuthorName" />
            </div>
            <div>
                <label for="birthYear">Start birth year</label>
                <InputNumber id="birthYear" @bind-Value="@Author.StartBirthYear" />
            </div>
            <div>
                <label for="biography">End birth year</label>
                <InputNumber id="biography" @bind-Value="@Author.EndBirthYear" />
            </div>
            <button style="display: none" type="submit"></button>
        </EditForm>
    </div>

    <Button OnClick="()=>RefreshData(1)" Text="Refresh data" CssRule="btn-max" />
    <Button OnClick="@AddAuthor" Text="New author" CssRule="btn-main" />

    <TotalCount TotalItems="@TotalItems" />

    <Table Items=Authors TItem=AuthorPagedListVM Routes=Routes />

    <Pagination CurrentPage=@Author.Page TotalPages=@TotalPages OnPageChanged=RefreshData />


}



