@using BookManagementSystem.UI.Models
@using BookManagementSystem.UI.UnitOfWork
@using BookManagementSystem.UI.Services.Base;
@using BookManagementSystem.UI.Components;
@using BookManagementSystem.UI.Models.Author;

@page "/authordetails/{authorId:guid}"
@inject IUnitOfWork unitOfWork;
@inject NavigationManager navigationManager;

<PageTitle>Author's details</PageTitle>
<h3 class="page-title">Detailed view of author</h3>
<hr />

@if (AuthorDetailsVM == null)
{
    <p>Loading...</p>
    return;
}
else
{
    <div>
        <div>
            <div>
                <DetailsFormCard Delete="Delete" Update="Edit" ID=@AuthorDetailsVM.ID Name="@AuthorDetailsVM.AuthorName" />
            </div>
            <hr />
            <div>
                <div>
                    <p>Birth year</p>
                    <p>@AuthorDetailsVM.BirthYear</p>
                </div>
                <hr />
                <div>
                    <p>Biography</p>
                    <p>@AuthorDetailsVM.Biography</p>
                </div>
                <hr />
                <div>
                    <p>Created date</p>
                    <p>@AuthorDetailsVM.GetFormattedCreatedDate()</p>
                </div>
                <hr />
                <div>
                    <p>Modified date</p>
                    <p>@AuthorDetailsVM.GetFormattedModifiedDate()</p>
                </div>
                <Button Text="Refresh data" OnClick="@LoadAuthor" CssRule="btn-main" />
            </div>

        </div>

        <div>
            @if (ErrorResponse != null)
            {
                <p>@ErrorResponse</p>
            }
            else
            {
                <h3>Author books</h3>
                <Table TItem=AuthorBookVM Routes=Routes Items=AuthorBooks />
            }
            <Button Text="Add book for author" CssRule="btn-main" OnClick="AddBook" />
        </div>
    </div>
}









